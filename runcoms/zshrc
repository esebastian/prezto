#
# Executes commands at the start of an interactive session.
#
# Authors:
#   Sorin Ionescu <sorin.ionescu@gmail.com>
#   Eduardo Sebastian <esebastian@altiora.es>
#

# Source Prezto.
if [[ -s "${ZDOTDIR:-$HOME}/.zprezto/init.zsh" ]]; then
  source "${ZDOTDIR:-$HOME}/.zprezto/init.zsh"
fi

# Customize to your needs...

local_path="/usr/local" # $(brew --prefix)

# -------------------
# Custom completions:
# -------------------

# aws client
if [[ -s "${local_path}/share/zsh/site-functions/_aws" ]]; then
  source "${local_path}/share/zsh/site-functions/_aws"
fi

# docker
zstyle ':completion:*:*:docker:*' option-stacking yes
zstyle ':completion:*:*:docker-*:*' option-stacking yes

# ----------
# Auth keys:
#-----------
if [[ -r "~/.authkeys" ]]; then
  source "~/.authkeys"
fi

# -----------------
# Version managers:
# -----------------

# ruby
[[ -s "${local_path}/bin/rbenv" ]] && eval "$(rbenv init -)"

# python
[[ -s "${local_path}/bin/pyenv" ]] && eval "$(pyenv init -)"
[[ -s "${local_path}/bin/pyenv-virtualenv" ]] && eval "$(pyenv virtualenv-init -)"

# node
[[ -s "${local_path}/bin/nodenv" ]] && eval "$(nodenv init -)"

# --------
# Aliases:
# --------

# shell
alias mmv='noglob zmv -W'

# python
alias py='python'
alias pyenv='LDFLAGS=-L/usr/local/opt/openssl/lib CPPFLAGS=-I/usr/local/opt/openssl/include pyenv'

# ruby
alias rb='ruby'
alias rbenv='LDFLAGS=-L/usr/local/opt/openssl/lib CPPFLAGS=-I/usr/local/opt/openssl/include rbenv'

# node
alias nd='node'
alias nodenv='LDFLAGS=-L/usr/local/opt/openssl/lib CPPFLAGS=-I/usr/local/opt/openssl/include nodenv'

# mongo
alias mongo-start='/usr/local/bin/mongod --fork --config /usr/local/etc/mongod.conf > /dev/null'
alias mongo-stop='pkill -f mongod && sleep 0.1'

# redis
alias redis-start='/usr/local/bin/redis-server /usr/local/etc/redis.conf --daemonize yes'
alias redis-stop='pkill -f redis-server && sleep 0.1'

# nginx
alias nginx-start='/usr/local/bin/nginx -c /usr/local/etc/nginx/nginx.conf'
alias nginx-stop='pkill -f nginx && sleep 0.1'

#-----------
# Functions:
#-----------
# env
function setenv {
  for i in `cat .env`; do
    export $i
  done
}

function unsetenv {
  for i in `cat .env`; do
    unset `echo $i | cut -f 1 -d "="`
  done
}

# java
function setjdk {
  local current_jdk=$([[ $JAVA_HOME =~ 1\.([4-9])\.0 ]] && echo $match)
  local new_jdk=$1

  if [ ! -z $new_jdk ]; then
    export JAVA_HOME=$(echo $JAVA_HOME | sed -E -e "s/$current_jdk/$new_jdk/")
    current_jdk=$new_jdk
  fi

  echo Current JDK: 1.$current_jdk.0
}

# text colors
function bcolors {
  export LSCOLORS='ExFxCxDxBxegedabagacad'
  export LS_COLORS='di=1;34:ln=1;35:so=1;32:pi=1;33:ex=1;31:bd=34;46:cd=34;43:su=0;41:sg=0;46:tw=0;42:ow=34;43:'
}

function dcolors {
  export LSCOLORS='exfxcxdxbxGxDxabagacad'
  export LS_COLORS='di=34:ln=35:so=32:pi=33:ex=31:bd=36;01:cd=33;01:su=31;40;07:sg=36;40;07:tw=32;40;07:ow=33;40;07:'
}
